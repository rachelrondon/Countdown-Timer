[{"/Users/RachelRondon/code/Koala/web-engineer-challenge/src/index.tsx":"1","/Users/RachelRondon/code/Koala/web-engineer-challenge/src/App.tsx":"2","/Users/RachelRondon/code/Koala/web-engineer-challenge/src/components/countdown/index.tsx":"3","/Users/RachelRondon/code/Koala/web-engineer-challenge/src/components/countdown/styles.ts":"4"},{"size":197,"mtime":1610919334000,"results":"5","hashOfConfig":"6"},{"size":884,"mtime":1611506930000,"results":"7","hashOfConfig":"6"},{"size":2962,"mtime":1611506318000,"results":"8","hashOfConfig":"6"},{"size":1521,"mtime":1611506410000,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"3zheqr",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"15","messages":"16","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"/Users/RachelRondon/code/Koala/web-engineer-challenge/src/index.tsx",[],["20","21"],"/Users/RachelRondon/code/Koala/web-engineer-challenge/src/App.tsx",[],"/Users/RachelRondon/code/Koala/web-engineer-challenge/src/components/countdown/index.tsx",["22","23","24"],"import React, { Component } from 'react';\nimport { useEffect } from 'react';\nimport { StyledCountdown, StyledButton, StyledForm, StyledInput, StyledDiv, StyledImg } from './styles';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCheck } from '@fortawesome/free-solid-svg-icons';\nimport { faPause } from '@fortawesome/free-solid-svg-icons';\nimport { faPlay } from '@fortawesome/free-solid-svg-icons';\n\ninterface Props {\n\n}\n\ninterface State {\n  time:  any;\n  textInput: string;\n  startTime: number;\n  currentTime: number;\n  reset: boolean;\n}\n\nexport class Countdown extends React.Component<Props, State> {\n  private timer: any;\n\n  state: State = {\n    time: null,\n    textInput: '',\n    startTime: 0,\n    currentTime: 0,\n    reset: false,\n  };\n\n  stopTimer() {\n    clearInterval(this.timer)\n  }\n\n  startTimer = () =>  {\n    this.timer = setInterval(() => {\n      let theSeconds,\n          theMinutes,\n          currentTime;\n\n      currentTime = this.state.currentTime;\n\n      this.setState(currentState => {\n        if (currentState.currentTime === 0) {\n          this.stopTimer();\n          return {\n            ...currentState,\n            currentTime: currentState.startTime\n          };\n        } else {\n          return {\n            ...currentState,\n            currentTime: currentState.currentTime - 1\n          }\n        }\n      })\n\n      theMinutes = Math.floor(currentTime / 60);\n      theSeconds = currentTime % 60;\n\n      if (theSeconds < 10) {\n        theSeconds = `0${theSeconds}`;\n      }\n\n      this.setState({\n        time: `${theMinutes}:${theSeconds}`\n      })\n\n      if (currentTime === 0) {\n        this.stopTimer()\n      }\n\n    }, 1000);\n  }\n\n  updateTextInput(event:any) {\n    this.setState({\n      textInput: event.target.value,\n      currentTime: event.target.value\n    })\n  }\n\n  reset() {\n    clearInterval(this.timer)\n\n     this.setState({\n        reset: true,\n        startTime: 0,\n        currentTime: 0,\n        time: null,\n        textInput: ''\n      })\n  }\n\n  render() {\n    return (\n      <StyledCountdown>\n        <StyledImg src=\"koala-logo.png\" />\n        <h1>Countdown Clock</h1>\n        <p>Enter the time in seconds</p>\n        <StyledDiv>\n          <StyledInput\n            type=\"text\"\n            onChange={this.updateTextInput.bind(this)}\n            name=\"textInput\"\n            value={this.state.textInput}\n          />\n        </StyledDiv>\n        <h2>{this.state.time}</h2>\n        <StyledDiv>\n          <StyledButton\n             onClick={this.startTimer.bind(this)}>\n             <FontAwesomeIcon icon={faPlay} />\n          </StyledButton>\n          <StyledButton\n             onClick={this.stopTimer.bind(this)}>\n             <FontAwesomeIcon icon={faPause} />\n          </StyledButton>\n          <StyledButton\n            onClick={this.reset.bind(this)}\n          > <FontAwesomeIcon icon={faCheck} />\n          </StyledButton>\n        </StyledDiv>\n      </StyledCountdown>\n    )\n  }\n}\n","/Users/RachelRondon/code/Koala/web-engineer-challenge/src/components/countdown/styles.ts",[],{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","severity":1,"message":"30","line":1,"column":17,"nodeType":"31","messageId":"32","endLine":1,"endColumn":26},{"ruleId":"29","severity":1,"message":"33","line":2,"column":10,"nodeType":"31","messageId":"32","endLine":2,"endColumn":19},{"ruleId":"29","severity":1,"message":"34","line":3,"column":41,"nodeType":"31","messageId":"32","endLine":3,"endColumn":51},"no-native-reassign",["35"],"no-negated-in-lhs",["36"],"@typescript-eslint/no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'StyledForm' is defined but never used.","no-global-assign","no-unsafe-negation"]